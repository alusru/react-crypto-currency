{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mbusonkabinde/belle/react-crypto-currency/src/Crypto.js\";\nimport React from 'react';\n\nconst Crypto = ({\n  name,\n  image,\n  symbol,\n  price,\n  volume\n}) => {\n  console.log(volume);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"crypto-symbol\",\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"$\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"volume\",\n          children: [\"$\", volume]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/mbusonkabinde/belle/react-crypto-currency/src/Crypto.js"],"names":["React","Crypto","name","image","symbol","price","volume","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,MAAd;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAAyC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEH,KAAV;AAAiB,UAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,oBAA8BE;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,0BAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA,0BAAwBC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnBD;;KAAML,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nconst Crypto = ({name, image, symbol,price, volume}) => {\nconsole.log(volume)\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"crypto-value\">\n                    <img src={image} alt=\"crypto\" />\n                    <h1>{name}</h1>\n                    <p className=\"crypto-symbol\">{symbol}</p>\n                </div>\n                <div className=\"crypto-info\">\n                    <p className=\"price\">${price}</p> \n                    <p className=\"volume\">${volume}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}